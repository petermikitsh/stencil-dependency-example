System.register(["./p-4f40f05e.system.js"],(function(e){"use strict";var t,r;return{setters:[function(e){t=e.r;r=e.h}],execute:function(){function n(e){var t;var r=e.Symbol;if(typeof r==="function"){if(r.observable){t=r.observable}else{t=r("observable");r.observable=t}}else{t="@@observable"}return t}var o;if(typeof self!=="undefined"){o=self}else if(typeof window!=="undefined"){o=window}else if(typeof global!=="undefined"){o=global}else if(typeof module!=="undefined"){o=module}else{o=Function("return this")()}var i=n(o);var s=function e(){return Math.random().toString(36).substring(7).split("").join(".")};var u={INIT:"@@redux/INIT"+s(),REPLACE:"@@redux/REPLACE"+s(),PROBE_UNKNOWN_ACTION:function e(){return"@@redux/PROBE_UNKNOWN_ACTION"+s()}};function f(e){if(typeof e!=="object"||e===null)return false;var t=e;while(Object.getPrototypeOf(t)!==null){t=Object.getPrototypeOf(t)}return Object.getPrototypeOf(e)===t}function c(e,t,r){var n;if(typeof t==="function"&&typeof r==="function"||typeof r==="function"&&typeof arguments[3]==="function"){throw new Error("It looks like you are passing several store enhancers to "+"createStore(). This is not supported. Instead, compose them "+"together to a single function.")}if(typeof t==="function"&&typeof r==="undefined"){r=t;t=undefined}if(typeof r!=="undefined"){if(typeof r!=="function"){throw new Error("Expected the enhancer to be a function.")}return r(c)(e,t)}if(typeof e!=="function"){throw new Error("Expected the reducer to be a function.")}var o=e;var s=t;var a=[];var d=a;var l=false;function p(){if(d===a){d=a.slice()}}function h(){if(l){throw new Error("You may not call store.getState() while the reducer is executing. "+"The reducer has already received the state as an argument. "+"Pass it down from the top reducer instead of reading it from the store.")}return s}function y(e){if(typeof e!=="function"){throw new Error("Expected the listener to be a function.")}if(l){throw new Error("You may not call store.subscribe() while the reducer is executing. "+"If you would like to be notified after the store has been updated, subscribe from a "+"component and invoke store.getState() in the callback to access the latest state. "+"See https://redux.js.org/api-reference/store#subscribe(listener) for more details.")}var t=true;p();d.push(e);return function r(){if(!t){return}if(l){throw new Error("You may not unsubscribe from a store listener while the reducer is executing. "+"See https://redux.js.org/api-reference/store#subscribe(listener) for more details.")}t=false;p();var n=d.indexOf(e);d.splice(n,1)}}function b(e){if(!f(e)){throw new Error("Actions must be plain objects. "+"Use custom middleware for async actions.")}if(typeof e.type==="undefined"){throw new Error('Actions may not have an undefined "type" property. '+"Have you misspelled a constant?")}if(l){throw new Error("Reducers may not dispatch actions.")}try{l=true;s=o(s,e)}finally{l=false}var t=a=d;for(var r=0;r<t.length;r++){var n=t[r];n()}return e}function v(e){if(typeof e!=="function"){throw new Error("Expected the nextReducer to be a function.")}o=e;b({type:u.REPLACE})}function w(){var e;var t=y;return e={subscribe:function e(r){if(typeof r!=="object"||r===null){throw new TypeError("Expected the observer to be an object.")}function n(){if(r.next){r.next(h())}}n();var o=t(n);return{unsubscribe:o}}},e[i]=function(){return this},e}b({type:u.INIT});return n={dispatch:b,subscribe:y,getState:h,replaceReducer:v},n[i]=w,n}var a=e("my_component",function(){function e(e){t(this,e);this.todos=function(e,t){if(e===void 0){e=[]}switch(t.type){case"ADD_TODO":return e.concat([t.text]);default:return e}};this.store=c(this.todos,["Use Redux"]);this.store.dispatch({type:"ADD_TODO",text:"Read the docs"})}e.prototype.render=function(){return r("div",null,JSON.stringify(this.store.getState()))};Object.defineProperty(e,"style",{get:function(){return""},enumerable:true,configurable:true});return e}())}}}));